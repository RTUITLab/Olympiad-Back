@inject IControlPanelApiService ControlPanelApiService


<Button Type="@ButtonType.Dashed" OnClick="@(() => showModal = true)">Новый пароль</Button>

<Modal Visible=showModal
       Closable
       OnCancel="@(() => showModal = false)"
       Title="Генерирование нового пароля"
       OkText="@("Сменить пароль")"
       CancelText="@("Отмена")"
       OnOk=GeneratePassword>
    <Space Direction="DirectionVHType.Vertical">
        <SpaceItem>
            <Text>При смене пароля пользователь не сможет войти под его текущим паролем.</Text>
        </SpaceItem>
        <SpaceItem>
            <Popover Title="Позднее будет добавлена возможность выхода из сессии">
                <Text Strong>Текущая сессия сохранится</Text>
            </Popover>
        </SpaceItem>
        <SpaceItem>
            @if (!string.IsNullOrEmpty(newPassword))
            {
                <Title Level=2>Новый пароль: <Text Style="font-size:50" Copyable Keyboard>@newPassword</Text></Title>
            }
        </SpaceItem>
    </Space>

</Modal>

@code {

    [Parameter]
    public Guid UserId { get; set; }

    private bool showModal;
    private bool loading;

    private string? newPassword;

    private async Task GeneratePassword()
    {
        loading = true;
        try
        {
            var newPasswordData = await ControlPanelApiService.GenerateNewPasswordForUser(UserId);
            newPassword = newPasswordData.NewPassword;
        }
        finally
        {
            loading = false;
        }
    }



}
